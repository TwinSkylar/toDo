(()=>{"use strict";var e={780:(e,t,n)=>{n.d(t,{Z:()=>s});var o=n(537),a=n.n(o),r=n(645),i=n.n(r)()(a());i.push([e.id,".modal {\n  background-color: rgba(0, 0, 0, 0.9);\n  /*Modal fills the entire page.  Sets the location of the modal*/\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  /*Display the contents of the modal*/\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  /*Gives the modal an effect of showing up on on screen*/\n  opacity: 0;\n  transition: opacity 0.4s;\n}\n\n.modal.open {\n  opacity: 1;\n}\n\n.modal .content {\n  font-family: sans-serif;\n  background-color: white;\n  border-radius: 6px;\n  text-align: left;\n  padding: 4rem;\n  box-shadow: 0, 0, 64px 12px rgba(255, 255, 255, 0.2);\n}\n\n\n.modal .content button {\n  padding: 0.75rem;\n  margin: 0 5px;\n  color: white;\n  border: 0;\n  border-radius: 6px;\n}\n\n.modal .content button.cancelBtnText {\n  background-color: rgb(218, 38, 38);\n  \n}\n.modal .content button.confirmBtnText {\n  background-color: rgb(28, 144, 28);\n}\n\n.priorityRadio{\n  display: flex;\n  gap: 5px;\n}\n","",{version:3,sources:["webpack://./src/modal/modal.css"],names:[],mappings:"AAAA;EACE,oCAAoC;EACpC,+DAA+D;EAC/D,eAAe;EACf,MAAM;EACN,SAAS;EACT,OAAO;EACP,QAAQ;EACR,oCAAoC;EACpC,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,uDAAuD;EACvD,UAAU;EACV,wBAAwB;AAC1B;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,uBAAuB;EACvB,uBAAuB;EACvB,kBAAkB;EAClB,gBAAgB;EAChB,aAAa;EACb,oDAAoD;AACtD;;;AAGA;EACE,gBAAgB;EAChB,aAAa;EACb,YAAY;EACZ,SAAS;EACT,kBAAkB;AACpB;;AAEA;EACE,kCAAkC;;AAEpC;AACA;EACE,kCAAkC;AACpC;;AAEA;EACE,aAAa;EACb,QAAQ;AACV",sourcesContent:[".modal {\n  background-color: rgba(0, 0, 0, 0.9);\n  /*Modal fills the entire page.  Sets the location of the modal*/\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  /*Display the contents of the modal*/\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  /*Gives the modal an effect of showing up on on screen*/\n  opacity: 0;\n  transition: opacity 0.4s;\n}\n\n.modal.open {\n  opacity: 1;\n}\n\n.modal .content {\n  font-family: sans-serif;\n  background-color: white;\n  border-radius: 6px;\n  text-align: left;\n  padding: 4rem;\n  box-shadow: 0, 0, 64px 12px rgba(255, 255, 255, 0.2);\n}\n\n\n.modal .content button {\n  padding: 0.75rem;\n  margin: 0 5px;\n  color: white;\n  border: 0;\n  border-radius: 6px;\n}\n\n.modal .content button.cancelBtnText {\n  background-color: rgb(218, 38, 38);\n  \n}\n.modal .content button.confirmBtnText {\n  background-color: rgb(28, 144, 28);\n}\n\n.priorityRadio{\n  display: flex;\n  gap: 5px;\n}\n"],sourceRoot:""}]);const s=i},28:(e,t,n)=>{n.d(t,{Z:()=>s});var o=n(537),a=n.n(o),r=n(645),i=n.n(r)()(a());i.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap);"]),i.push([e.id,':root {\n  font-family: "Roboto", sans-serif;\n  font-size: 18px;\n  /* COLORS PALETTE */\n  --aqua: #00b3bb;\n  --light-aqua: #00e6aa;\n  --dark-aqua: #0e9aa1;\n  --grey: #e6e6e6;\n  --light-grey: #f7f7f7;\n  --dark-grey: #757575;\n  --white: #ffffff;\n  --green: #61b874;\n  --yellow: #e6db7b;\n  --red: #e67b7b;\n  --dark-red: #c46161;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n/*Handles the structure of the webpage*/\nbody {\n  height: 100vh;\n  display: grid;\n  grid-template-rows: minmax(min-content, 10%) 1fr 2rem;\n  grid-template-columns: minmax(max-content, 15%) auto;\n  grid-template-areas:\n    "header header"\n    "menu content"\n    "footer footer";\n}\n\n#header {\n  grid-area: header;\n  display: flex;\n  align-items: center;\n  font-size: 36px;\n  gap: 10px;\n}\n\n#menu {\n  grid-area: menu;\n  display: grid;\n  grid-template-rows: 2rem max-content max-content;\n  gap: 20px;\n}\n#content {\n  grid-area: content;\n  overflow: auto;\n}\n#footer {\n  grid-area: footer;\n  text-align: center;\n}\n\n#header,\n#menu,\n#content,\n#footer {\n  padding: 10px;\n}\n\n/*Handles the layout of each sub area*/\n\n.menuContainer {\n  display: flex;\n  flex-direction: column;\n  gap: 0.2rem;\n  margin-top: 0.2rem;\n}\n\n#content {\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n}\n\n#content .toDo {\n  display: grid;\n  border: solid 2px var(--light-grey);\n  grid-template-columns: min-content auto min-content 6rem min-content;\n  gap: 5px;\n}\n\n/*Handles the style of each task*/\n\n#content .toDo {\n  align-items: center;\n  padding: 5px;\n}\n\n#content .taskDetails {\n  border: 2px solid var(--light-grey);\n  height: 1em;\n}\n\n#content .taskDetails:hover {\n  cursor: grab;\n}\n\n#content .taskDel {\n  height: 1em;\n}\n\n#content .taskDel:hover {\n  cursor: grab;\n}\n\n/*Handles the color for the website*/\n#header,\n#footer {\n  background: linear-gradient(90deg, var(--aqua) 0%, var(--light-aqua) 100%);\n  color: var(--white);\n}\n\n#menu{\n  background-color: var(--light-grey);\n}\n\n#content{\n  background-color: var(--white);\n}',"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAEA;EACE,iCAAiC;EACjC,eAAe;EACf,mBAAmB;EACnB,eAAe;EACf,qBAAqB;EACrB,oBAAoB;EACpB,eAAe;EACf,qBAAqB;EACrB,oBAAoB;EACpB,gBAAgB;EAChB,gBAAgB;EAChB,iBAAiB;EACjB,cAAc;EACd,mBAAmB;AACrB;;AAEA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA,uCAAuC;AACvC;EACE,aAAa;EACb,aAAa;EACb,qDAAqD;EACrD,oDAAoD;EACpD;;;mBAGiB;AACnB;;AAEA;EACE,iBAAiB;EACjB,aAAa;EACb,mBAAmB;EACnB,eAAe;EACf,SAAS;AACX;;AAEA;EACE,eAAe;EACf,aAAa;EACb,gDAAgD;EAChD,SAAS;AACX;AACA;EACE,kBAAkB;EAClB,cAAc;AAChB;AACA;EACE,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA;;;;EAIE,aAAa;AACf;;AAEA,sCAAsC;;AAEtC;EACE,aAAa;EACb,sBAAsB;EACtB,WAAW;EACX,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,QAAQ;AACV;;AAEA;EACE,aAAa;EACb,mCAAmC;EACnC,oEAAoE;EACpE,QAAQ;AACV;;AAEA,iCAAiC;;AAEjC;EACE,mBAAmB;EACnB,YAAY;AACd;;AAEA;EACE,mCAAmC;EACnC,WAAW;AACb;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,YAAY;AACd;;AAEA,oCAAoC;AACpC;;EAEE,0EAA0E;EAC1E,mBAAmB;AACrB;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,8BAA8B;AAChC",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap");\n\n:root {\n  font-family: "Roboto", sans-serif;\n  font-size: 18px;\n  /* COLORS PALETTE */\n  --aqua: #00b3bb;\n  --light-aqua: #00e6aa;\n  --dark-aqua: #0e9aa1;\n  --grey: #e6e6e6;\n  --light-grey: #f7f7f7;\n  --dark-grey: #757575;\n  --white: #ffffff;\n  --green: #61b874;\n  --yellow: #e6db7b;\n  --red: #e67b7b;\n  --dark-red: #c46161;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n/*Handles the structure of the webpage*/\nbody {\n  height: 100vh;\n  display: grid;\n  grid-template-rows: minmax(min-content, 10%) 1fr 2rem;\n  grid-template-columns: minmax(max-content, 15%) auto;\n  grid-template-areas:\n    "header header"\n    "menu content"\n    "footer footer";\n}\n\n#header {\n  grid-area: header;\n  display: flex;\n  align-items: center;\n  font-size: 36px;\n  gap: 10px;\n}\n\n#menu {\n  grid-area: menu;\n  display: grid;\n  grid-template-rows: 2rem max-content max-content;\n  gap: 20px;\n}\n#content {\n  grid-area: content;\n  overflow: auto;\n}\n#footer {\n  grid-area: footer;\n  text-align: center;\n}\n\n#header,\n#menu,\n#content,\n#footer {\n  padding: 10px;\n}\n\n/*Handles the layout of each sub area*/\n\n.menuContainer {\n  display: flex;\n  flex-direction: column;\n  gap: 0.2rem;\n  margin-top: 0.2rem;\n}\n\n#content {\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n}\n\n#content .toDo {\n  display: grid;\n  border: solid 2px var(--light-grey);\n  grid-template-columns: min-content auto min-content 6rem min-content;\n  gap: 5px;\n}\n\n/*Handles the style of each task*/\n\n#content .toDo {\n  align-items: center;\n  padding: 5px;\n}\n\n#content .taskDetails {\n  border: 2px solid var(--light-grey);\n  height: 1em;\n}\n\n#content .taskDetails:hover {\n  cursor: grab;\n}\n\n#content .taskDel {\n  height: 1em;\n}\n\n#content .taskDel:hover {\n  cursor: grab;\n}\n\n/*Handles the color for the website*/\n#header,\n#footer {\n  background: linear-gradient(90deg, var(--aqua) 0%, var(--light-aqua) 100%);\n  color: var(--white);\n}\n\n#menu{\n  background-color: var(--light-grey);\n}\n\n#content{\n  background-color: var(--white);\n}'],sourceRoot:""}]);const s=i},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,a,r){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);o&&i[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(a," */");return[t].concat([r]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var r={},i=[],s=0;s<e.length;s++){var c=e[s],d=o.base?c[0]+o.base:c[0],l=r[d]||0,A="".concat(d," ").concat(l);r[d]=l+1;var p=n(A),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)t[p].references++,t[p].updater(u);else{var m=a(u,o);o.byIndex=s,t.splice(s,0,{identifier:A,updater:m,references:1})}i.push(A)}return i}function a(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var r=o(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<r.length;i++){var s=n(r[i]);t[s].references--}for(var c=o(e,a),d=0;d<r.length;d++){var l=n(r[d]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}r=c}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,a&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var a=t[o];if(void 0!==a)return a.exports;var r=t[o]={id:o,exports:{}};return e[o](r,r.exports,n),r.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var o=t.getElementsByTagName("script");if(o.length)for(var a=o.length-1;a>-1&&!e;)e=o[a--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.nc=void 0,(()=>{class e{constructor({titleText:e,descriptionText:t,expDateText:n,priorityText:o,notesText:a}){this.titleText=e,this.descriptionText=t,this.expDateText=n,this.priorityText=o,this.notesText=a}createAndOpen(e,t){this.modalElem=document.createElement("div"),this.modalElem.classList.add("modal"),setTimeout((()=>{this.modalElem.classList.add("open")}),50);const n=document.createElement("div");n.classList.add("content"),this.modalElem.appendChild(n);const o=document.createElement("div");o.classList.add("titleText");const a=document.createElement("label");a.className="title",o.textContent="Title:",o.appendChild(a);const r=document.createElement("input");r.id="title",r.className="title",r.value=this.titleText,o.appendChild(r),n.appendChild(o);const i=document.createElement("div");i.classList.add("priorityText");const s=document.createElement("p");s.textContent="Priority:",i.appendChild(s);const c=document.createElement("div");c.classList.add("priorityRadio");const d=document.createElement("label");d.for="low",d.textContent="Low",c.appendChild(d);const l=document.createElement("input");l.id="low",l.className="priority",l.type="radio",l.name="priority",l.value="low",c.appendChild(l);const A=document.createElement("label");A.for="medium",A.textContent="Medium",c.appendChild(A);const p=document.createElement("input");p.id="medium",p.className="priority",p.type="radio",p.name="priority",p.value="medium",c.appendChild(p);const u=document.createElement("label");u.for="high",u.textContent="High",c.appendChild(u);const m=document.createElement("input");switch(m.id="high",m.className="priority",m.type="radio",m.name="priority",m.value="high",c.appendChild(m),this.priorityText){case"low":l.checked=!0;break;case"medium":p.checked=!0;break;case"high":m.checked=!0}n.appendChild(i),n.appendChild(c);const h=document.createElement("div");h.classList.add("expDateText");const g=document.createElement("label");g.className="expDate",h.textContent="Due Date:",h.appendChild(g);const C=document.createElement("input");C.id="expDate",C.className="expDate",C.type="date",C.value=this.expDateText.toISOString().substr(0,10),h.appendChild(C),n.appendChild(h);const f=document.createElement("div");f.classList.add("descriptionText");const E=document.createElement("label");E.className="description",f.textContent="Description:",f.appendChild(E);const b=document.createElement("input");b.id="description",b.className="description",b.value=this.descriptionText,f.appendChild(b),n.appendChild(f);const y=document.createElement("button");y.classList.add("cancelBtnText"),y.textContent="Cancel",y.addEventListener("click",(()=>{t("Cancelled"),this.close()})),n.appendChild(y);const x=document.createElement("button");x.classList.add("confirmBtnText"),x.textContent="Save",x.addEventListener("click",(()=>{e([r.value,b.value,C.value,Array.from(document.getElementsByName("priority")).find((e=>e.checked)).value,""]),this.close()})),n.appendChild(x),document.body.appendChild(this.modalElem)}open(){return new Promise(((e,t)=>{this.createAndOpen(e,t)}))}close(){this.modalElem.classList.remove("open"),setTimeout((()=>{document.body.removeChild(this.modalElem)}),50)}}class t{constructor(e){this._taskList=[]}getTaskList(){return this._taskList}addTask(e){return this._taskList.push(e),!0}removeTask(e){const t=this._taskList.indexOf(e);this._taskList.splice(t,1)}getTaskSize(){return this._taskList.length}}class o{constructor(e){this._name=e,this._tasks=new t}getName(){return this._name}setName(e){this._name=e}getTasks(){return this._tasks}addTask(e){this._tasks.addTask(e)}getTaskSize(){return this._tasks.getTaskSize()}}class a{constructor(e,t,n,o,a){this._title=e,this._description=t,this._dueDate=n,this._priority=o,this._notes=a}getTitle(){return this._title}setTitle(e){this._title=e}getDescription(){return this._description}setDescription(e){this._description=e}getDueDate(){return this._dueDate}setDueDate(e){this._dueDate=e}getPriority(){return this._priority}setPriority(e){this._priority=e}getNotes(){return this._notes}setNote(e){this_notes=e}update(e,t,n,o,a){this._title=e,this._description=t,this._dueDate=n,this._priority=o,this._notes=a}}let r=[];function i(e){r.push(e)}function s(){var e=(new Date).getTime(),t=new Date((new Date).setFullYear((new Date).getFullYear()+1))-e,n=Math.round(Math.random()*t);return new Date(n+=e)}function c(){window.localStorage.setItem("projectNumber",r.length);for(let e=0;e<r.length;e++)window.localStorage.setItem("project"+e,JSON.stringify(r[e])),window.localStorage.setItem("project"+e+"Tasks",JSON.stringify(r[e].getTaskSize()))}var d=n(379),l=n.n(d),A=n(795),p=n.n(A),u=n(569),m=n.n(u),h=n(565),g=n.n(h),C=n(216),f=n.n(C),E=n(589),b=n.n(E),y=n(780),x={};x.styleTagTransform=b(),x.setAttributes=g(),x.insert=m().bind(null,"head"),x.domAPI=p(),x.insertStyleElement=f(),l()(y.Z,x),y.Z&&y.Z.locals&&y.Z.locals;const v=n.p+"images/bin.svg",B=n.p+"images/edit.svg";function w(t,n){let o=t.getTitle(),a=t.getDescription(),r=t.getDueDate(),i=t.getPriority(),s=t.getNotes();new e({titleText:o,descriptionText:a,expDateText:r,priorityText:i,notesText:s}).open().then((e=>{""===o&&n.addTask(t),t.update(e[0],e[1],new Date(e[2]),e[3],e[4]),c(),k(n)})).catch((e=>{}))}function k(e){const t=document.getElementById("content"),n=e.getTasks();t.replaceChildren(),n.getTaskList().forEach((o=>{const a=document.createElement("div");a.classList.add("toDo"),a.classList.add(o.getPriority());const r=document.createElement("div");r.textContent=o.getTitle(),r.classList.add("taskName");const i=document.createElement("input");i.setAttribute("type","checkbox"),i.addEventListener("change",(e=>{e.target.checked?r.style.setProperty("text-decoration","line-through"):r.style.setProperty("text-decoration","none")}));const s=new Image;s.src=B,s.alt="details",s.classList.add("taskDetails"),s.addEventListener("click",(t=>{w(o,e)}));const d=document.createElement("div");d.textContent=o.getDueDate().toDateString().substr(0,10),d.classList.add("taskDate");const l=new Image;l.src=v,l.alt="delete",l.classList.add("taskDel"),l.addEventListener("click",(t=>{n.removeTask(o),c(),k(e)}));let A="red";"medium"===o.getPriority()?A="yellow":"low"===o.getPriority()&&(A="green"),a.appendChild(i),a.appendChild(r),a.appendChild(s),a.appendChild(d),a.appendChild(l),a.style.borderLeftColor=A,t.appendChild(a)}));const o=document.createElement("button");o.textContent="+ Add task",o.addEventListener("click",(t=>{w(new a("","",new Date,"low",""),e)})),t.appendChild(o)}var T=n(28),D={};D.styleTagTransform=b(),D.setAttributes=g(),D.insert=m().bind(null,"head"),D.domAPI=p(),D.insertStyleElement=f(),l()(T.Z,D),T.Z&&T.Z.locals&&T.Z.locals,function e(){if(localStorage.getItem("projectNumber"))!function(){const e=window.localStorage.getItem("projectNumber");for(let t=0;t<e;t++){const e=window.localStorage.getItem("project"+t),n=window.localStorage.getItem("project"+t+"Tasks");let r=JSON.parse(e);const s=new o(r._name);for(let e=0;e<n;e++){let t=new Array(r._tasks._taskList[e]),n=new a(t[0]._title,t[0]._description,new Date(t[0]._dueDate),t[0]._priority,t[0]._notes);s.addTask(n)}i(s)}}();else{let e=[];e.push(new a("title1","description 1",s(),"low","notes")),e.push(new a("title2","description 2",s(),"low","notes")),e.push(new a("title3","description 3",s(),"medium","notes")),e.push(new a("title4","description 4",s(),"high","notes")),e.push(new a("title5","description 5",s(),"medium","notes")),e.push(new a("title7","description 6",s(),"high","notes"));const t=new o("first project"),n=new o("second project");e.forEach((e=>{t.addTask(e)})),e=[],e.push(new a("proj1","description 1",s(),"high","notes")),e.push(new a("proj2","description 2",s(),"high","notes")),e.push(new a("proj3","description 3",s(),"low","notes")),e.forEach((e=>{n.addTask(e)})),i(t),i(n),c()}!function(t){document.getElementById("home");const n=document.getElementById("projects");document.getElementById("content"),n.appendChild(function(t){const n=document.createElement("div");n.classList.add("menuContainer"),t.forEach((e=>{const t=document.createElement("button");t.textContent=e.getName(),t.addEventListener("click",(function(){k(e)})),n.appendChild(t)}));const o=document.createElement("button");return o.textContent="Generate projects",o.addEventListener("click",(t=>{localStorage.clear(0),e()})),n.appendChild(o),n}(t))}(r)}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,